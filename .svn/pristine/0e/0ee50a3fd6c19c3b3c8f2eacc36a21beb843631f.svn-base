package kr.happyjob.study.employee.service;

import java.util.Calendar;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.happyjob.study.employee.dao.EmpPaymentDao;
import kr.happyjob.study.employee.model.EmployeeModel;

@Service
public class EmpPaymentServiceImpl implements EmpPaymentService {
	@Autowired
	EmpPaymentDao empPaymentDao;

	/* 급여지급 리스트 전체 조회 */
	@Override
	public List<EmployeeModel> empPaymentList(Map<String, Object> paramMap) {
		Calendar cal = Calendar.getInstance();
		int year = cal.get(Calendar.YEAR);
		int month = cal.get(Calendar.MONTH) + 1;
		String str = (String)paramMap.get("from_date");
		String[] strAry = str.split("-");
		int from_date_year = Integer.parseInt(strAry[0]);
		int from_date_month = Integer.parseInt(strAry[1]);
		
		int flag;
		//조회하려는 월이 현재 월과 같을 경우
		if(year == from_date_year && month == from_date_month) { //tb_emp(현재 연봉)으로 조회
			flag = 1;
			paramMap.put("flag", flag);
		}else { //tb_sal_his(이미 지급된 내역)으로 조회
			flag = 2;
			paramMap.put("flag", flag);
		}
		
		return empPaymentDao.empPaymentList(paramMap);
	}
	
	/* 급여지급 리스트 전체 조회 총 글 수 가져오기 */
	@Override
	public int countEmpPaymentList(Map<String, Object> paramMap) {
		Calendar cal = Calendar.getInstance();
		int year = cal.get(Calendar.YEAR);
		int month = cal.get(Calendar.MONTH) + 1;
		String str = (String)paramMap.get("from_date");
		String[] strAry = str.split("-");
		int from_date_year = Integer.parseInt(strAry[0]);
		int from_date_month = Integer.parseInt(strAry[1]);
		
		int flag;
		//조회하려는 월이 현재 월과 같을 경우
		if(year == from_date_year && month == from_date_month) { //tb_emp(현재 연봉)으로 조회
			flag = 1;
			paramMap.put("flag", flag);
		}else if (year > from_date_year && month > from_date_month ){ //tb_sal_his(이미 지급된 내역)으로 조회
			flag = 2;
			paramMap.put("flag", flag);
		} else {
			flag = 1;
			paramMap.put("flag", flag);
		}
		return empPaymentDao.countEmpPaymentList(paramMap);
	}

}
