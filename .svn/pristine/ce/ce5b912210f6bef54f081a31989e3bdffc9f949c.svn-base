package kr.happyjob.study.employee.service;

import java.io.File;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.happyjob.study.common.comnUtils.FileUtilCho;
import kr.happyjob.study.employee.dao.EmpMgtDao;
import kr.happyjob.study.employee.model.EmployeeModel;

@Service
public class EmpMgtServiceImpl implements EmpMgtService {
	@Autowired
	EmpMgtDao empMgtDao;

	/* 파일 저장 경로*/
	@Value("${fileUpload.rootPath}")
	private String rootPath;
	@Value("${fileUpload.empimgPath}")
	private String empimgPath;	
	
	/* 인사관리 사원등록 -> 로그인 아이디 가져오기 */
	@Override
	public String gainLoginID() {
		return empMgtDao.gainLoginID();
	}
	
	/* 인사관리 사원등록 */
	@Override
	public void empRegister(Map<String, Object> paramMap, HttpServletRequest request) throws Exception {
		MultipartHttpServletRequest mpRequest = (MultipartHttpServletRequest)request;

		//등록할 사번
		System.out.println("로그인 아이디 : "+paramMap.get("loginID"));
		String itemFilePath = empimgPath + paramMap.get("loginID") + File.separator;
		
		FileUtilCho fileUtilCho = new FileUtilCho(mpRequest, rootPath, itemFilePath);
		Map<String, Object> listFileUtilModel = fileUtilCho.uploadFiles();
		
		paramMap.put("filename", listFileUtilModel.get("file_nm"));
		paramMap.put("filepath", listFileUtilModel.get("file_loc"));
		paramMap.put("filesize", listFileUtilModel.get("file_size"));
		
		System.out.println("업로드한 파일 이름 : "+paramMap.get("filename"));
		System.out.println("업로드한 파일 url : "+paramMap.get("filepath"));
		System.out.println("업로드한 파일 사이즈 : "+paramMap.get("filesize"));
	
		//사번 만들기
		try{
			empMgtDao.empRegister1(paramMap); //프로필사진 제외 사원 등록 -> tb_userinfo
			empMgtDao.empRegister2(paramMap); //프로필사진 제외 사원 등록 -> tb_emp
			System.out.println("확인작업 "+listFileUtilModel);
			System.out.println("임플"+mpRequest );
			
			if(mpRequest.getFile("profileUpload").getSize() > 0) {
				empMgtDao.empRegisterProfile(paramMap);
			}else {
				System.out.println("프로필 사진 없음");
			}
			
		}catch(Exception e){
			throw e;
		}
		
	}//사원등록 끝

	/* 인사관리 사원 리스트 조회 */
	@Override
	public List<EmployeeModel> showEmpList(Map<String, Object> paramMap) {
		return empMgtDao.showEmpList(paramMap);
	}
	/* 인사관리 사원 총 명수 */
	@Override
	public int countEmpList(Map<String, Object> paramMap) {
		return empMgtDao.countEmpList(paramMap);
	}
	
	/* 인사관리 사원 상세조회 */
	@Override
	public EmployeeModel viewEmpDtl(Map<String, Object> paramMap) {
		return empMgtDao.viewEmpDtl(paramMap);
	}
	
	/* 인사관리 사원 상세조회 -> 근무연차 가져오기 */
	@Override
	public int getWorkyear(Map<String, Object> paramMap) {
		return empMgtDao.getWorkyear(paramMap);
	}

	/* 인사관리 퇴직 처리 */
	@Override
	public void resignEmp(Map<String, Object> paramMap) {
		empMgtDao.resignEmp(paramMap);
		int oamt = empMgtDao.isExistOamt(paramMap);
		if (oamt > 0) {
			paramMap.put("oamt", oamt);
			empMgtDao.payOamt(paramMap);
		}
		//-> sal_history? 어떻게 해야하는지..?
	}


}
